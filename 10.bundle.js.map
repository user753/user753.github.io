{"version":3,"sources":["webpack:///./src/games/sea/meta.ts","webpack:///./src/core/ui/components/games/baseMainGameComponent.ts","webpack:///./src/core/utils/matrixs.ts","webpack:///./src/games/sea/assets.ts","webpack:///./src/games/sea/components/mainComponent.ts","webpack:///./src/games/sea/components/seaComponent.ts","webpack:///./src/games/sea/levels.ts","webpack:///./src/games/sea/logic.ts"],"names":[],"mappings":"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","file":"10.bundle.js","sourcesContent":["import {IGameMetaData} from \"core/logic\"\nimport {LevelOptions, ScoreOptions} from \"core/types\"\nimport {Images} from \"./assets\"\nimport {MainComponent} from \"./components/mainComponent\"\nimport {levels} from \"./levels\"\nimport {Logic} from \"./logic\"\n\nexport const gameId = \"sea\"\nconst scoreOptions: ScoreOptions = {\n  scoreAnswer: 100,\n  scoreBonus: 0,\n  scoreBonusPerLevel: 5\n}\nconst levelOptions: LevelOptions = {\n  levels,\n  levelsSeqCounts: [{seqCount: 6, maxLevel: 100}]\n}\nexport const metaData: IGameMetaData = {\n  gameId,\n  title: \"Word search\",\n  logic: Logic,\n  component: MainComponent,\n  scoreOptions,\n  levelOptions,\n  darkBg: true,\n  images: Images.data,\n  atlasCount: 2,\n  tutorialTaskCount: 3,\n  size: {\n    width: 2048,\n    height: 1280,\n    heightMin: 1152\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/meta.ts","import {CoreSounds} from \"core/assets\"\nimport {AssetUtl} from \"core/assets/assetUtl\"\nimport {Sys} from \"core/logic/sys\"\nimport {audioService} from \"core/services\"\nimport {GameComponentContext} from \"core/types\"\nimport {Signals} from \"core/ui/animations/signals\"\nimport {AnswerControlType} from \"core/ui/components/answers/answerControlType\"\nimport {GameComponent} from \"core/ui/components/games/gameComponent\"\nimport {Img} from \"core/ui/controls\"\nimport {screenSizeService} from \"core/ui/services/instances\"\nimport {toJS} from \"mobx\"\n\nconst bgLeftKey = \"bg_left\"\n\nconst introInterval = 2000\nconst introDelay = 300\n\nexport const durations = {\n  introAnimationDelay: 100,\n  introInterval,\n  introDelay\n}\n\nexport abstract class BaseMainGameComponent<S = {}> extends GameComponent<{}, S> {\n\n  statusOptions = {\n    offset: 0,\n    waitCompleteBeforeNewTask: false,\n  }\n\n  initialState(): S {\n    return {} as any\n  }\n\n  answersControl = AnswerControlType.None\n\n  constructor(context: GameComponentContext) {\n    super(context)\n    context.uiService.rootComponent = this\n    context.gameState = this.initialState()\n\n    this.fixedToCamera = true\n    this.onDestroy.addOnce(() => {\n      this.context.uiService.mainComponent.onNewTask.dispose()\n      this.context.uiService.mainComponent.onAnswer.dispose()\n      audioService.stopAll()\n    })\n\n    this.onChangeForRun(\n      x => screenSizeService.screenSize,\n      x => {\n        this.cameraOffset.y = screenSizeService.topOffset\n      })\n\n  }\n\n  get cameraBottom() {\n    const bottom = screenSizeService.height - this.cameraOffset.y\n    return bottom\n  }\n\n  prepareDefaultIntroAnimation(delay = durations.introDelay) {\n    let bgLeftOffset = 0\n    let bgLeft: Img | undefined = undefined\n    if (!screenSizeService.isPortrait && AssetUtl.checkImageKey(this.gameKey(bgLeftKey))) {\n      bgLeft = this.addImage([bgLeftKey, [0, 0]])\n      const width = -bgLeft.width + 2\n      bgLeft.x = width\n      bgLeftOffset = -width\n    }\n    this.cameraOffset.x = -screenSizeService.realLeftOffset + bgLeftOffset\n    const tween = this.game.add.tween(this.cameraOffset).to(\n      {x: 0}, durations.introInterval, Phaser.Easing.Cubic.InOut, false, delay\n    )\n    if (bgLeft) {\n      tween.onComplete.addOnce(() => this.remove(bgLeft, true))\n    }\n    return tween\n  }\n\n  introAnimation(): { start: () => void, onComplete: Phaser.Signal } {\n    const tween = this.prepareDefaultIntroAnimation()\n    return tween\n  }\n\n  startIntro() {\n    if (Sys.devMode) {\n      this.context.uiService.mainComponent.onIntroComplete.dispatch()\n      return Signals.memorize()\n    }\n    audioService.play(CoreSounds.intro)\n    const tween = this.introAnimation()\n    const signal = Signals.bind(this.delay(durations.introAnimationDelay), () => {\n      tween.start()\n      return tween.onComplete\n    })\n    signal.addOnce(() => this.context.uiService.mainComponent.onIntroComplete.dispatch())\n    this.disableInputOn(signal)\n    return signal\n  }\n\n  onAfterInit() {\n    this.initTaskRendering()\n  }\n\n  private initTaskRendering() {\n\n    this.onChangeFor(() => this.gameState.lastAnswer, x => {\n      this.context.uiService.mainComponent.onAnswer.dispatch(x)\n    })\n    this.onChangeFor(() => this.context.gameService.gameCycleService.state.levelTask.task,\n      x => {\n        if (this.statusOptions.waitCompleteBeforeNewTask) {\n          this.disableInputOn(this.context.uiService.answerStatus.onAnimationComplete).addOnce(() => {\n            this.callRenderNewTask(x)\n          })\n        } else {\n          this.callRenderNewTask(x)\n        }\n      })\n    this.callRenderNewTask(this.context.gameService.gameCycleService.state.levelTask.task)\n  }\n\n  private callRenderNewTask(task: any) {\n    this.context.uiService.mainComponent.onNewTask.dispatch(toJS(task))\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/ui/components/games/baseMainGameComponent.ts","import {tuple} from \"core/utils/tuples\"\nimport {Undef} from \"core/utils/undef\"\nimport * as _ from 'lodash'\n\nexport module Matrixs {\n\n  export const directions = {\n    up: {x: -1, y: 0},\n    down: {x: 1, y: 0},\n    left: {x: 0, y: -1},\n    right: {x: 0, y: 1}\n  }\n\n  export type Direction = keyof typeof directions\n\n  // export const move(p: number[], directions: Direction[]){\n  //   // directions.forEach(d => {\n  //   //   const {x, y} = directions[d]\n  //   // })\n  // }\n\n  export function get<T>(m: T[][], [x, y]: [number, number], def?: T) {\n    const row = m[y]\n    return row ? row[x] : def\n  }\n\n  export function set<T>(m: T[][], [x, y]: [number, number], value: T) {\n    let row = m[y]\n    if (Undef.is(row)) {\n      row = []\n      m[y] = row\n    }\n    row[x] = value\n  }\n\n  export function compact<T>(m: T[][]) {\n    return m.map(_.compact)\n  }\n  export function create<T>(colCount: number,rowCount: number, fn: (x: number, y: number) => T): T[][]{\n    return _.range(rowCount).map(y => _.range(colCount).map(x => fn(x, y)))\n  }\n\n  export function map<T, K>(m: T[][], fn: (item: T, x: number, y: number) => K): K[][]{\n    return m.map((row, y) => row.map((item, x) => fn(item,x,y)))\n  }\n\n  export function intersection<F, S>(f: F[][], s: S[][]) {\n    const first: [F, [number, number]][] = []\n    const second: [S, [number, number]][] = []\n    const both: [F, S, [number, number]][] = []\n    _.range(Math.max(f.length, s.length)).forEach(y => {\n      _.range(Math.max((f[y] || []).length, (s[y] || []).length)).forEach(x => {\n        const p = tuple(x, y)\n        const fe = get(f, p)\n        const se = get(s, p)\n        if (!Undef.is(fe) && !Undef.is(se)) {\n          both.push([fe, se, p])\n        } else if (!Undef.is(fe)) {\n          first.push([fe, p])\n        } else if (!Undef.is(se)) {\n          second.push([se, p])\n        }\n      })\n    })\n    return tuple(first, second, both)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/utils/matrixs.ts","import {CoreColors, CoreFonts} from \"core/assets/fonts\"\nimport {Sys} from \"core/logic/sys\"\nimport {ImagesMetaData} from \"core/types\"\n\nexport module Translations {\n  export const task = \"task\"\n  export const category = (id: number) => \"category\" + id\n}\n\nexport module Fonts {\n}\n\nexport module Images {\n  export const bg = \"bg\"\n  export const sand = \"sand\"\n  export const line = \"line\"\n  export const data: ImagesMetaData = {\n    sprites: []\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/assets.ts","import {BiValue} from \"core/ui/common/positions\"\nimport {Sizes} from \"core/ui/common/sizes\"\nimport {BaseMainGameComponent} from \"core/ui/components/games/baseMainGameComponent\"\nimport {OnInit} from \"core/ui/components/onInit\"\nimport {Numbers} from \"core/utils/numbers\"\nimport {Images} from \"games/sea/assets\"\nimport {SeaComponent} from \"games/sea/components/seaComponent\"\nimport {Task} from \"games/sea/logic\"\n\nconst positions = Sizes.create({\n})\nconst biPositions = Sizes.biUpdate(positions, {\n})\n\nconst biValues = BiValue.create({arrowVisible: true}, {arrowVisible: false})\n\nconst durations = {\n}\n\nexport class MainComponent extends BaseMainGameComponent implements OnInit {\n  bg = this.addImage(Images.bg)\n  sea = this.add(this.createComponent(SeaComponent)).anchorCenter().setPos(this.center())\n\n  onInit(): void {\n    this.startIntro()\n    console.log(this.center())\n  }\n\n  onNewTask(task: Task) {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/components/mainComponent.ts","import {Sizes} from \"core/ui/common/sizes\"\nimport {GameComponent} from \"core/ui/components/games/gameComponent\"\nimport {OnInit} from \"core/ui/components/onInit\"\nimport {Btn, ImageBtn} from \"core/ui/controls/btn\"\nimport {Img} from \"core/ui/controls/img\"\nimport {Matrixs} from \"core/utils/matrixs\"\nimport {Images} from \"games/sea/assets\"\nimport {Task} from \"games/sea/logic\"\nimport * as _ from 'lodash'\n\nconst positions = Sizes.create({\n  icon: [211, 170],\n  size: 216\n})\n\nexport class SeaComponent extends GameComponent implements OnInit {\n\n  onNewTask(task: Task): void {\n    this.removeAll(true)\n    const data = this.generate()\n    const field = Matrixs.map(data, (item,x,y) => {\n      const btn = new ImageBtn(\"\", this.gameKey(item), () => {\n      })\n      return btn\n    })\n    Sizes.table(field, {x:0})\n    this.addChildren(_.flatten(field))\n    this.updatePivot()\n  }\n\n  onInit(): void {\n  }\n\n  getSectionIndex(\n    full: {w: number, h: number},\n    inner: {w: number, h: number},\n    p: {x: number, y: number}){\n    function getIndex(full: number, inner: number, x: number){\n      const start = (full - inner)/2\n      const end = (full + inner)/2\n      return x < start ? 0 : (x >= end ? 2 : 1)\n    }\n    return getIndex(full.h, inner.h, p.y) * 3 + getIndex(full.w, inner.w, p.x)\n  }\n\n  generate(){\n\n    const inner = {w: 4, h: 2}\n    const full = {w: 10, h: 6}\n    const data = Matrixs.create(full.w, full.h, (x,y) => {\n      const index = this.getSectionIndex(full, inner, {x,y})\n      return index == 4 ? Images.line : Images.sand\n    })\n    return data\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/components/seaComponent.ts","import {createLevelsFromArray} from \"core/types/logic\"\nimport {Words} from \"games/polyglot/wordsort/words\"\n\nexport interface Level {\n  w: number, h: number\n}\n\nfunction level(w: number, h: number): Level {\n  return {w,h}\n}\n\nexport const levels = createLevelsFromArray([\n  level(4,2),\n])\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/levels.ts","import {GameLogic} from \"core/logic\"\nimport {RandomGenerator} from \"core/utils\"\nimport {UniqSeq} from \"core/utils/circleSeq\"\nimport {Words} from \"games/polyglot/wordsort/words\"\nimport * as _ from 'lodash'\nimport {Level} from \"./levels\"\n\nexport type Task = {\n  w: number,\n  h: number,\n  position: number[]\n  answers: number[]\n}\n\nexport class Logic extends GameLogic<Task, Level> {\n  rng = new RandomGenerator()\n\n  nextTask(level: Level) {\n    const position = [1,1]\n    const answers = [0]\n    const {w,h} = level\n    return {\n      w,\n      h,\n      position,\n      answers\n    }\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/games/sea/logic.ts"],"sourceRoot":""}